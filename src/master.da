import os
import sys
import uuid

THIS_DIR = os.path.dirname(os.path.realpath(__file__))
sys.path.append(THIS_DIR + "/..")

from config import master_config as conf
coord = import_da("coord")
common = import_da("common")

class Client(process):
    def setup(coords_list, requestNo):
        pass

    def run():
        requests = conf.cnfg[requestNo].requests
        if requests:
            for i in requests:
                subj = common.Object(requests[i]["subjid"], requests[i]["subjtype"])
                res = common.Object(requests[i]["resid"], requests[i]["restype"])
                req = common.Request(subj, res, requests[i]["action"])
                common.populateRequest(req)
                req.client = self
                if req.resource in common.mightWriteObj(req):
                    obj1 = req.subject
                    obj2 = req.resource
                else:
                    obj1 = req.resource
                    obj2 = req.subject
                req.objects.append(obj1)
                req.objects.append(obj2)
                send(('RequestFromClient', req), to = common.coord(common.obj(req, 1), coords_list))
        await(len(listof(p, received(("ResponseFromCoord", _), from_ = p))) == len(requests))

    def receive(msg=('ResponseFromCoord', response)):
        print(response)


def main():
    # Access configuration
    requestNo = int(sys.argv[1])
    print(conf.cnfg)
    clients = new(Client, num = 1)
    coords = new(coord.Coord, num = 6)
    
    setup(clients, (list(coords), requestNo))
    setup(coords, (list(coords), ))

    start(coords)
    start(clients)

    for c in clients: c.join()

    # Terminate the process
    for c in coords:
        send(('RequestFromClient', "Done"), to = c)
