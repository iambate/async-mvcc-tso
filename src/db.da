import commonpy
import logging
import os
import sys
THIS_DIR = os.path.dirname(os.path.realpath(__file__))
sys.path.append(THIS_DIR + "/..")
from config import master_config as conf
common = import_da('common')

class DB(process):
    def setup(requestNo):
        self.database = {}
        self.logger = logging.getLogger(__name__)

    def run():
        _db = conf.cnfg[requestNo].database
        ts = common.now()
        for obj in _db:
            self.database[obj] = {}
            for attr in _db[obj]:
                self.database[obj][attr] = [common.Versions(wts=ts, value=_db[obj][attr])]

        await(received(('Done')))

    def receive(msg=('Read', unique_db_req, obj, attrs, ts), from_=p):
            output("DB received request: %s", unique_db_req)
            reply = {}
            if obj.id in self.database:
                for attr in attrs:
                    if attr in self.database[obj.id]:
                        reply[attr] = commonpy.max_version(list(v for v in self.database[obj.id][attr] if v.wts < ts))
            send(('ReadDbResponse', unique_db_req, reply), to=p)
    #updates are of format : {attr1:}
    def receive(msg=("UpdateDatabase",obj,updates,ts), from_=p): 
        for attr in updates:
            self.database[obj][attr].append(common.Versions(wts=ts, value= updates[attr]))
        

    def receive(msg=("Done")):
        #output("Database received done")
        output('----------------DATABASE CONTENT----------------')
        content = ""
        for obj in self.database.keys():
            content+="OBJECT "
            content+=str(obj)
            content+=":="
            #output(obj,":\n")
            for attr in self.database[obj]:
                content+=attr
                content+=":"
                #output(attr,":")
                for versions in self.database[obj][attr]:
                    content+="wts="
                    content+=str(versions.wts)
                    content+=" value="
                    content+=str(versions.value)
                    content+=","
        output(content)
        output("------------------------------------------------")
        return True

